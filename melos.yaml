name: mimir

repository: https://github.com/GregoryConrad/mimir

command:
  bootstrap:
    usePubspecOverrides: true

packages:
  - packages/**

scripts:
  analyze:
    exec: flutter analyze .
    description: Analyze a specific package in this project.

  check-format:
    exec: flutter format --set-exit-if-changed .
    description: Check the format of a specific package in this project.

  format:
    exec: flutter format .
    description: Format a specific package in this project.

  version:
    description: Updates version numbers in all build files
    run: |
      CURR_VERSION=mimir-v`awk '/^version: /{print $2}' packages/mimir/pubspec.yaml`

      # Android
      ANDROID_HEADER="def releaseTagVersion = '$CURR_VERSION' \/\/ generated; do not edit"
      sed -i.bak "1 s/.*/$ANDROID_HEADER/" packages/flutter_mimir/android/build.gradle
      rm packages/flutter_mimir/android/*.bak

      # iOS & macOS
      APPLE_HEADER="release_tag_name = '$CURR_VERSION' # generated; do not edit"
      sed -i.bak "1 s/.*/$APPLE_HEADER/" packages/flutter_mimir/ios/flutter_mimir.podspec
      sed -i.bak "1 s/.*/$APPLE_HEADER/" packages/flutter_mimir/macos/flutter_mimir.podspec
      rm packages/flutter_mimir/macos/*.bak packages/flutter_mimir/ios/*.bak

      git add packages/flutter_mimir/

  build:
    run: melos run build:apple && melos run build:android
    description: Build all native libraries for the project.

  build:apple:
    run: bash packages/mimir/native/platforms-build/apple.sh
    description: Build the XCFramework for iOS and macOS.

  build:android:
    run: bash packages/mimir/native/platforms-build/android.sh
    description: Build the .aar for Android.

  test:
    run: melos run test:dart --no-select && melos run test:flutter --no-select
    description: Run all Dart & Flutter tests in this project.

  test:dart:
    run: melos exec -c 1 --fail-fast -- "dart test test"
    description: Run Dart tests for a specific package in this project.
    select-package:
      flutter: false
      dir-exists: test

  test:flutter:
    run: melos exec -c 1 --fail-fast -- "flutter test test"
    description: Run Flutter tests for a specific package in this project.
    select-package:
      flutter: true
      dir-exists: test
